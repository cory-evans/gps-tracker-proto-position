syntax = "proto3";

package position.v1;

option go_package = "go.buf.build/grpc/go/corux/gps-position/v1";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "Position Service";
		version: "1.0";
	};
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
		security: {
			key: "ApiKeyAuth";
			value: {
				type: TYPE_API_KEY;
				in: IN_HEADER;
				name: "Authorization";
			};
		}
	}
};

service PositionService {
	rpc GetPosition(GetPositionRequest) returns (GetPositionResponse) {
		option (google.api.http) = {
			get: "/location/{device_id}"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			security: {
				security_requirement: {
					key: "ApiKeyAuth",
					value: {}
				}
			}
		};
	}
	rpc PostPosition(PostPositionRequest) returns (PostPositionResponse) {
		option (google.api.http) = {
			post: "/location",
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			security: {
				security_requirement: {
					key: "ApiKeyAuth",
					value: {}
				}
			}
		};
	}
	rpc GetRecentPosition(GetRecentPositionRequest) returns (GetRecentPositionResponse) {
		option (google.api.http) = {
			get: "/location/{device_id}/recent"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			security: {
				security_requirement: {
					key: "ApiKeyAuth",
					value: {}
				}
			}
		};
	}
	rpc GetOwnedDevicesPositions(GetOwnedDevicesPositionsRequest) returns (GetOwnedDevicesPositionsResponse) {
		option (google.api.http) = {
			get: "/devices"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			security: {
				security_requirement: {
					key: "ApiKeyAuth",
					value: {}
				}
			}
			summary: "Get the current positions of owned devices"
		};
	}
}

message Position {
	string created_at = 1;
	double latitude = 2;
	double longitude = 3;
	double altitude = 4;
	double speed_knots = 5;
	double accuracy = 6;
	string device_id = 7;
}

message GetPositionRequest {
	string device_id = 1;
}

message GetPositionResponse {
	Position position = 1;
}

message GetRecentPositionRequest {
	string device_id = 1;
}

message GetRecentPositionResponse {
	repeated Position positions = 1;
}

message PostPositionRequest {
	string device_time = 1;
	double latitude = 2;
	double longitude = 3;
	double altitude = 4;
	double speed_knots = 5;
	double accuracy = 6;
}

message PostPositionResponse {}

message GetOwnedDevicesPositionsRequest {}
message GetOwnedDevicesPositionsResponse {
	repeated Position positions = 1;
}